name: Realme X7 Max Kernel Builder
on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ========================
      # 1. Validate Workflow Syntax
      # ========================
      - name: Validate Workflow Syntax
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.rest.actions.getWorkflow({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: '.github/workflows/build.yml'
              });
              core.info('✅ Workflow syntax validated');
            } catch (error) {
              core.setFailed(`❌ Workflow syntax error: ${error}`);
            }

      # ========================
      # 2. Checkout Kernel Source
      # ========================
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: dharani-dp-33/realme_X7max_GTneo_GTneo2T-AndroidT-kernel-source
          ref: master
          path: kernel

      # ========================
      # 3. Install Dependencies
      # ========================
      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential \
            libncurses-dev \
            bison \
            flex \
            libssl-dev \
            findutils \
            git

      # ========================
      # 4. Setup Toolchain
      # ========================
      - name: Setup Toolchain
        run: |
          git clone --depth=1 \
            https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 \
            toolchain

      # ========================
      # 5. Defconfig Patching
      # ========================
      - name: Patch Defconfig
        run: |
          cd kernel
          # Find defconfig
          DEFCONFIG=$(find arch/arm64/configs -name "*_defconfig" -print -quit)
          
          # Disable ALL OPLUS features
          sed -i '/^CONFIG_OPLUS_/s/=y/=n/' $DEFCONFIG
          sed -i '/^CONFIG_OPLUS_/d' $DEFCONFIG  # Remove if not using =n
          sed -i '/_FEATURE_/s/=y/=n/' $DEFCONFIG

          # Verify changes
          echo "Modified defconfig:"
          grep "OPLUS\|_FEATURE_" $DEFCONFIG || true

      # ========================
      # 6. Build Environment Setup
      # ========================
      - name: Prepare Build Tools
        run: |
          cd kernel
          make ARCH=arm64 defconfig
          make ARCH=arm64 prepare

      # ========================
      # 7. Build Kernel
      # ========================
      - name: Build Kernel
        run: |
          cd kernel
          export ARCH=arm64
          export CLANG_PATH=$(pwd)/../toolchain/clang-*/bin/clang
          export PATH=$(pwd)/../toolchain/clang-*/bin:$PATH
          
          set -ex
          make clean && make mrproper
          make defconfig
          make -j$(nproc) CC=clang 2>&1 | tee build.log

      # ========================
      # 8. Upload Artifacts
      # ========================
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: |
            kernel/arch/arm64/boot/Image*
            kernel/build.log
          if-no-files-found: error
