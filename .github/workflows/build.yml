name: Realme X7 Max Kernel Builder
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: dharani-dp-33/realme_X7max_GTneo_GTneo2T-AndroidT-kernel-source
          ref: master

      - name: Checkout MemKernel
        uses: actions/checkout@v4
        with:
          repository: dharani-dp-33/MemKernel
          path: MemKernel

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev findutils

      - name: Setup Toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 toolchain

      # Auto-detect defconfig file
      - name: Find Defconfig
        id: find-defconfig
        run: |
          cd MemKernel
          # Search for defconfig recursively in arch/arm64/configs
          DEFCONFIG_PATH=$(find arch/arm64/configs/ -name "*_defconfig" | head -n 1)
          
          if [ -z "$DEFCONFIG_PATH" ]; then
            echo "::error::No defconfig found in arch/arm64/configs/"
            exit 1
          fi

          echo "Found defconfig at: $DEFCONFIG_PATH"
          echo "DEFCONFIG_NAME=$(basename $DEFCONFIG_PATH)" >> $GITHUB_ENV
          echo "DEFCONFIG_DIR=$(dirname $DEFCONFIG_PATH)" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          cd MemKernel
          export ARCH=arm64
          export CROSS_COMPILE=$(pwd)/../toolchain/bin/aarch64-linux-android-
          
          # Use auto-detected defconfig
          make O=out $DEFCONFIG_DIR/$DEFCONFIG_NAME
          make -j$(nproc) O=out

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: MemKernel/out/arch/arm64/boot/
