name: Realme X7 Max Kernel Builder
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout KERNEL SOURCE (not MemKernel)
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: dharani-dp-33/realme_X7max_GTneo_GTneo2T-AndroidT-kernel-source
          ref: master
          path: kernel  # Changed to "kernel" directory

      # 2. Skip MemKernel checkout (unless it's a toolchain)
      # 3. Install dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential libncurses-dev bison flex libssl-dev

      # 4. Auto-detect defconfig in KERNEL SOURCE (not MemKernel)
      - name: Find Defconfig
        id: find-defconfig
        run: |
          cd kernel  # Changed to kernel source directory
          DEFCONFIG=$(find . -type f -name "*x7max*defconfig" -o -name "*mt6893*defconfig" -o -name "*_defconfig" | head -n1)
          
          if [ -z "$DEFCONFIG" ]; then
            echo "::error::DEFCONFIG NOT FOUND! Check your kernel source."
            exit 1
          fi
          echo "DEFCONFIG=$DEFCONFIG" >> $GITHUB_ENV
          echo "Using: $DEFCONFIG"

      # 5. Use modern toolchain
      - name: Setup Toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_clang_host_linux-x86_clang-r487747 toolchain

      # 6. Build in KERNEL directory
      - name: Build Kernel
        run: |
          cd kernel
          export ARCH=arm64
          export CLANG_PATH=$(pwd)/../toolchain/bin/clang
          
          make clean && make mrproper
          make $DEFCONFIG
          make -j$(nproc) CC=clang

      # 7. Upload artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: kernel/arch/arm64/boot/Image*
