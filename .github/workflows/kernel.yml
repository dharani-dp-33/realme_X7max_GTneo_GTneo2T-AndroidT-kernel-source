name: Build Kernel
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc build-essential \
          libssl-dev make bc bison flex libelf-dev zip \
          libncurses-dev gzip python-is-python3

      - name: Check and Setup Files
        run: |
          # First, let's see what we actually have
          echo "=== Checking Directory Structure ==="
          ls -la arch/arm64/kernel/ || echo "kernel directory not found"
          
          # Now carefully handle rootguard
          if [ ! -f "arch/arm64/kernel/rootguard/Makefile" ]; then
            mkdir -p arch/arm64/kernel/rootguard
            echo 'obj-y := rootguard.o' > arch/arm64/kernel/rootguard/Makefile
            echo '#include <linux/module.h>
            MODULE_LICENSE("GPL");' > arch/arm64/kernel/rootguard/rootguard.c
          fi

      - name: Create OPLUS Config
        run: |
          cat << 'EOL' > OplusKernelEnvConfig.mk
          # OPLUS Features Configuration
          OPLUS_FEATURE_HEALTHINFO=yes
          OPLUS_FEATURE_SCHED_ASSIST=yes
          OPLUS_FEATURE_TASK_CPUSTATS=yes
          OPLUS_FEATURE_HANS_FREEZE=yes
          OPLUS_FEATURE_STORAGE_TOOL=yes
          OPLUS_FEATURE_MMC_DRIVER=yes
          OPLUS_FEATURE_UFS_DRIVER=yes
          OPLUS_FEATURE_UFS_SHOW_LATENCY=yes
          OPLUS_FEATURE_AOD=yes
          OPLUS_FEATURE_DC=yes
          OPLUS_FEATURE_ENABLE_MODEM_DB=yes
          OPLUS_FEATURE_ENGINEERTOOLS=yes
          OPLUS_FEATURE_THEIA=yes
          OPLUS_FEATURE_APP_MONITOR=yes
          OPLUS_FEATURE_MULTI_KSWAPD=yes
          OPLUS_FEATURE_PHOENIX=yes
          OPLUS_FEATURE_SENSOR=yes
          OPLUS_FEATURE_IOMONITOR=yes
          OPLUS_FEATURE_MEMLEAK_DETECT=yes
          OPLUS_FEATURE_WIFI_MTUDETECT=yes
          OPLUS_FEATURE_WIFI_SLA=yes
          OPLUS_FEATURE_CHG_BASIC=yes

          # Export features
          $(foreach myfeature,$(shell grep OPLUS_FEATURE_ $(CURDIR)/OplusKernelEnvConfig.mk | grep -v "#" | cut -d'=' -f1), \
          $(eval $(myfeature)_MACRO := -D$(myfeature)) \
          $(eval KBUILD_CFLAGS += $($(myfeature)_MACRO)))
          
          export KBUILD_CFLAGS
          EOL

      - name: Build Kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          # Remove out directory if it exists and create new
          rm -rf out/
          mkdir -p out/
          
          echo "=== Starting Kernel Build ==="
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE k6891v1_64_k419_debug_defconfig
          
          echo "=== Building Kernel ==="
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE -j$(nproc) 2>&1 | tee build.log

      - name: Package Kernel
        if: success()
        run: |
          git clone https://github.com/osm0sis/AnyKernel3
          cd AnyKernel3
          
          # Update device names
          sed -i 's/do.devicecheck=1/do.devicecheck=1/g' anykernel.sh
          sed -i 's/device.name1=/device.name1=RMX3031/g' anykernel.sh
          sed -i 's/device.name2=/device.name2=RMX3033/g' anykernel.sh
          sed -i 's/device.name3=/device.name3=GTNeo/g' anykernel.sh
          sed -i 's/device.name4=/device.name4=GTNeo2T/g' anykernel.sh
          sed -i 's/device.name5=/device.name5=X7Max/g' anykernel.sh
          
          if [ -f "../out/arch/arm64/boot/Image.gz-dtb" ]; then
            cp ../out/arch/arm64/boot/Image.gz-dtb .
            zip -r9 ../X7Max-Kernel.zip * -x .git README.md *placeholder
          fi
          cd ..

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-files
          path: |
            out/arch/arm64/boot/Image*
            build.log
            X7Max-Kernel.zip
            OplusKernelEnvConfig.mk
            out/.config
          if-no-files-found: warn
