name: Create Flash Package
on:
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc build-essential \
          libssl-dev make bc bison flex libelf-dev zip \
          libncurses-dev gzip python-is-python3

      - name: Final Setup Attempt
        run: |
          function safe_write() {
            local dir=$(dirname "$1")
            mkdir -p "$dir" 2>/dev/null || true
            cat > "$1"
          }

          # Create directories and files
          echo "=== Setting up build environment ==="
          echo "Time: 2025-03-23 18:42:50"
          echo "User: dharani-dp-33"

          for dir in \
            vendor/oplus/kernel/include \
            vendor/oplus/kernel/secureguard/rootguard \
            kernel/sched_assist \
            kernel/orms \
            kernel/oplus_cpu \
            kernel/healthinfo \
            kernel/dfr \
            kernel/mm_osvelte \
            kernel/performance \
            drivers/oplus \
            include/config; do
            mkdir -p "$dir"
          done

          # Version header
          safe_write "vendor/oplus/kernel/include/oplus_version.h" << EOF
          #ifndef _OPLUS_VERSION_H_
          #define _OPLUS_VERSION_H_
          #define OPLUS_BUILD_DATE "2025-03-23"
          #define OPLUS_BUILD_TIME "18:42:50"
          #define OPLUS_BUILD_USER "dharani-dp-33"
          #endif
          EOF

          # Create Kconfig files
          safe_write "kernel/sched_assist/Kconfig" << EOF
          config OPLUS_FEATURE_SCHED_ASSIST
              def_bool y
              help
                  OPLUS SchedAssist feature
          EOF

          # Other necessary files
          safe_write "drivers/oplus/Kconfig" << EOF
          menu "OPLUS Feature Drivers"
          config OPLUS_SYSTEM_KERNEL
              bool "OPLUS system kernel"
              default y
              help
                  OPLUS system kernel feature
          endmenu
          EOF

          touch include/config/auto.conf

      - name: Build Kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export KBUILD_BUILD_USER="dharani-dp-33"
          export KBUILD_BUILD_HOST="github-actions"
          
          rm -rf out/
          mkdir -p out/
          
          echo "=== Starting Kernel Build ==="
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE k6891v1_64_k419_debug_defconfig || echo "Config failed but continuing..."
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE -j$(nproc) 2>&1 | tee build.log

      - name: Create Flash Package
        run: |
          echo "=== Creating Flash Package ==="
          mkdir -p flash_package
          cd flash_package
          
          # Create instructions
          cat << 'EOF' > FLASH_INSTRUCTIONS.txt
          X7Max/GTNeo/GTNeo2T Kernel Flashing Instructions
          ==============================================
          Build Date: 2025-03-23
          Build Time: 18:42:50
          Builder: dharani-dp-33

          Prerequisites:
          -------------
          1. Unlocked bootloader
          2. TWRP/Custom Recovery
          3. USB debugging enabled
          4. Battery > 50%

          Flashing Steps:
          --------------
          Via Recovery:
          1. Boot to recovery
          2. Flash X7Max-Kernel.zip
          3. Reboot

          Via Fastboot:
          1. Boot to fastboot
          2. fastboot flash boot Image.gz-dtb
          3. fastboot reboot
          EOF

          # Package kernel
          cp ../out/arch/arm64/boot/Image.gz-dtb ./
          
          # Clone AnyKernel3
          git clone https://github.com/osm0sis/AnyKernel3
          cd AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=1/g' anykernel.sh
          sed -i 's/device.name1=/device.name1=RMX3031/g' anykernel.sh
          sed -i 's/device.name2=/device.name2=RMX3033/g' anykernel.sh
          sed -i 's/device.name3=/device.name3=GTNeo/g' anykernel.sh
          sed -i 's/device.name4=/device.name4=GTNeo2T/g' anykernel.sh
          sed -i 's/device.name5=/device.name5=X7Max/g' anykernel.sh
          
          cp ../Image.gz-dtb ./
          zip -r9 ../X7Max-Kernel.zip * -x .git README.md *placeholder
          cd ..
          
          # Create checksums
          sha256sum Image.gz-dtb X7Max-Kernel.zip > SHA256SUMS.txt
          
          # Final package
          zip -r ../X7Max-Kernel-Full.zip * -x "*.git*" "*placeholder*"

      - name: Upload Flash Package
        uses: actions/upload-artifact@v4
        with:
          name: X7Max-Kernel-Flash-Package-NEW
          path: |
            flash_package/X7Max-Kernel-Full.zip
            flash_package/SHA256SUMS.txt
            flash_package/FLASH_INSTRUCTIONS.txt
          if-no-files-found: error
