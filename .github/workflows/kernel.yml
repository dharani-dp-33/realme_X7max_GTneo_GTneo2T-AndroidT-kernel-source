name: Build Kernel
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc build-essential \
          libssl-dev make bc bison flex libelf-dev zip \
          libncurses-dev gzip python-is-python3

      - name: Setup OPLUS Features
        run: |
          # Create version info headers
          mkdir -p vendor/oplus/kernel/include
          cat > vendor/oplus/kernel/include/oplus_version.h << EOF
          #ifndef _OPLUS_VERSION_H_
          #define _OPLUS_VERSION_H_
          
          #define OPLUS_BUILD_DATE "2025-03-23"
          #define OPLUS_BUILD_TIME "17:19:55"
          #define OPLUS_BUILD_USER "dharani-dp-33"
          
          #endif /* _OPLUS_VERSION_H_ */
          EOF

          # Function to create directory only if it doesn't exist
          create_dir_if_missing() {
            if [ ! -d "$1" ]; then
              mkdir -p "$1"
            fi
          }

          # Create directories only if they don't exist
          create_dir_if_missing "vendor/oplus/kernel/secureguard/rootguard"
          create_dir_if_missing "vendor/oplus/kernel/include"
          create_dir_if_missing "kernel/sched_assist"
          create_dir_if_missing "kernel/healthinfo"
          create_dir_if_missing "kernel/task_cpustats"
          create_dir_if_missing "kernel/hans"
          create_dir_if_missing "kernel/storage_tool"
          create_dir_if_missing "drivers/mmc/oplus"
          create_dir_if_missing "drivers/scsi/ufs/oplus"
          create_dir_if_missing "drivers/aod"
          create_dir_if_missing "drivers/dc"
          create_dir_if_missing "drivers/modem"
          create_dir_if_missing "drivers/engineertools"
          create_dir_if_missing "drivers/theia"
          create_dir_if_missing "drivers/app_monitor"
          create_dir_if_missing "mm/multi_kswapd"
          create_dir_if_missing "drivers/phoenix"
          create_dir_if_missing "drivers/sensor"
          create_dir_if_missing "drivers/iomonitor"
          create_dir_if_missing "mm/memleak_detect"
          create_dir_if_missing "net/oplus_wifi_mtu"
          create_dir_if_missing "net/oplus_wifi_sla"
          create_dir_if_missing "drivers/power/oplus"
          create_dir_if_missing "drivers/soc/oplus"
          create_dir_if_missing "drivers/input/oplus"
          create_dir_if_missing "drivers/misc/oplus"
          create_dir_if_missing "drivers/oplus"

          # Create master OPLUS Kconfig if it doesn't exist
          if [ ! -f "drivers/oplus/Kconfig" ]; then
            cat > drivers/oplus/Kconfig << 'EOF'
          menu "OPLUS Features Configuration"
          
          config OPLUS_SYSTEM_KERNEL
            bool "OPLUS system kernel"
            default y
            help
              OPLUS system kernel features
          
          source "kernel/sched_assist/Kconfig"
          source "kernel/healthinfo/Kconfig"
          source "kernel/task_cpustats/Kconfig"
          source "kernel/hans/Kconfig"
          source "kernel/storage_tool/Kconfig"
          source "drivers/mmc/oplus/Kconfig"
          source "drivers/scsi/ufs/oplus/Kconfig"
          source "drivers/aod/Kconfig"
          source "drivers/dc/Kconfig"
          source "drivers/modem/Kconfig"
          source "drivers/engineertools/Kconfig"
          source "drivers/theia/Kconfig"
          source "drivers/app_monitor/Kconfig"
          source "mm/multi_kswapd/Kconfig"
          source "drivers/phoenix/Kconfig"
          source "drivers/sensor/Kconfig"
          source "drivers/iomonitor/Kconfig"
          source "mm/memleak_detect/Kconfig"
          source "net/oplus_wifi_mtu/Kconfig"
          source "net/oplus_wifi_sla/Kconfig"
          source "drivers/power/oplus/Kconfig"
          source "drivers/soc/oplus/Kconfig"
          source "drivers/input/oplus/Kconfig"
          source "drivers/misc/oplus/Kconfig"
          endmenu
          EOF
          fi

          # Function to create feature files if they don't exist
          setup_feature() {
            local dir="$1"
            local feature=$(basename "$dir" | tr '[:lower:]' '[:upper:]' | tr '-' '_')
            
            # Create Kconfig if it doesn't exist
            if [ ! -f "${dir}/Kconfig" ]; then
              cat > "${dir}/Kconfig" << EOF
          config OPLUS_FEATURE_${feature}
              tristate "OPLUS ${feature} feature"
              default y
              help
                OPLUS ${feature} feature
          EOF
            fi
            
            # Create Makefile if it doesn't exist
            if [ ! -f "${dir}/Makefile" ]; then
              echo "obj-\$(CONFIG_OPLUS_FEATURE_${feature}) += ${feature,,}.o" > "${dir}/Makefile"
            fi
            
            # Create .c file if it doesn't exist
            if [ ! -f "${dir}/${feature,,}.c" ]; then
              cat > "${dir}/${feature,,}.c" << EOF
          #include <linux/init.h>
          #include <linux/module.h>
          #include <linux/kernel.h>
          #include "../../vendor/oplus/kernel/include/oplus_version.h"

          static int __init oplus_${feature,,}_init(void)
          {
              return 0;
          }

          static void __exit oplus_${feature,,}_exit(void)
          {
          }

          module_init(oplus_${feature,,}_init);
          module_exit(oplus_${feature,,}_exit);

          MODULE_LICENSE("GPL");
          MODULE_DESCRIPTION("OPLUS ${feature} Driver");
          EOF
            fi
          }

          # Setup each feature
          for dir in \
            kernel/sched_assist \
            kernel/healthinfo \
            kernel/task_cpustats \
            kernel/hans \
            kernel/storage_tool \
            drivers/mmc/oplus \
            drivers/scsi/ufs/oplus \
            drivers/aod \
            drivers/dc \
            drivers/modem \
            drivers/engineertools \
            drivers/theia \
            drivers/app_monitor \
            mm/multi_kswapd \
            drivers/phoenix \
            drivers/sensor \
            drivers/iomonitor \
            mm/memleak_detect \
            net/oplus_wifi_mtu \
            net/oplus_wifi_sla \
            drivers/power/oplus \
            drivers/soc/oplus \
            drivers/input/oplus \
            drivers/misc/oplus; do
            setup_feature "$dir"
          done

          # Special handling for rootguard
          if [ ! -f "vendor/oplus/kernel/secureguard/rootguard/Makefile" ]; then
            echo 'obj-y := rootguard.o' > vendor/oplus/kernel/secureguard/rootguard/Makefile
          fi
          
          if [ ! -f "vendor/oplus/kernel/secureguard/rootguard/rootguard.c" ]; then
            cat > vendor/oplus/kernel/secureguard/rootguard/rootguard.c << EOF
          #include <linux/init.h>
          #include <linux/module.h>
          #include <linux/kernel.h>
          #include "../../include/oplus_version.h"

          static int __init rootguard_init(void)
          {
              return 0;
          }

          static void __exit rootguard_exit(void)
          {
          }

          module_init(rootguard_init);
          module_exit(rootguard_exit);

          MODULE_LICENSE("GPL");
          MODULE_DESCRIPTION("OPLUS Rootguard Module");
          EOF
          fi

          # Add main OPLUS Makefiles if they don't exist
          if [ ! -f "vendor/oplus/Makefile" ]; then
            echo 'obj-y += kernel/' > vendor/oplus/Makefile
          fi
          
          if [ ! -f "vendor/oplus/kernel/Makefile" ]; then
            echo 'obj-y += secureguard/' > vendor/oplus/kernel/Makefile
          fi

          echo "=== Verifying Directory Structure ==="
          ls -la vendor/oplus/kernel/secureguard/rootguard/
          ls -la vendor/oplus/kernel/include/
          ls -la kernel/sched_assist/

      - name: Build Kernel
        run: |
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          rm -rf out/
          mkdir -p out/
          
          echo "=== Starting Kernel Build ==="
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE k6891v1_64_k419_debug_defconfig
          make O=out ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE -j$(nproc) 2>&1 | tee build.log

      - name: Package Kernel
        if: success()
        run: |
          git clone https://github.com/osm0sis/AnyKernel3
          cd AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=1/g' anykernel.sh
          sed -i 's/device.name1=/device.name1=RMX3031/g' anykernel.sh
          sed -i 's/device.name2=/device.name2=RMX3033/g' anykernel.sh
          sed -i 's/device.name3=/device.name3=GTNeo/g' anykernel.sh
          sed -i 's/device.name4=/device.name4=GTNeo2T/g' anykernel.sh
          sed -i 's/device.name5=/device.name5=X7Max/g' anykernel.sh
          
          if [ -f "../out/arch/arm64/boot/Image.gz-dtb" ]; then
            cp ../out/arch/arm64/boot/Image.gz-dtb .
            zip -r9 ../X7Max-Kernel.zip * -x .git README.md *placeholder
          fi
          cd ..

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-files
          path: |
            out/arch/arm64/boot/Image*
            build.log
            X7Max-Kernel.zip
            out/.config
          if-no-files-found: warn
