name: Build Kernel
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install Required Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y tree gcc-aarch64-linux-gnu gcc build-essential \
          libssl-dev make bc bison flex libelf-dev zip

      - name: Analyze Repository Structure
        run: |
          # Create output directory
          mkdir -p analysis_output
          
          {
            echo "=== Repository Analysis ==="
            echo "Timestamp: $(date -u)"
            echo "Working Directory: $(pwd)"
            
            echo -e "\n1. Root Directory Contents:"
            ls -la
            
            echo -e "\n2. Looking for sched_assist directories:"
            find . -name "sched_assist" -type d
            
            echo -e "\n3. Looking for klockopt directories:"
            find . -name "klockopt" -type d
            
            echo -e "\n4. All Kconfig files:"
            find . -name "Kconfig"
            
            echo -e "\n5. Directory Structure:"
            tree -L 4 || echo "Tree command failed"
            
            echo -e "\n6. Symlinks:"
            find . -type l -ls
            
            echo -e "\n7. Important Paths Content:"
            echo "kernel/ directory:"
            ls -la kernel/ 2>/dev/null || echo "No kernel directory"
            echo -e "\ndrivers/ directory:"
            ls -la drivers/ 2>/dev/null || echo "No drivers directory"
            echo -e "\nvendor/ directory:"
            ls -la vendor/ 2>/dev/null || echo "No vendor directory"
            
            echo -e "\n8. Kconfig Contents:"
            for f in $(find . -name "Kconfig"); do
              echo -e "\nFile: $f"
              echo "===================="
              cat "$f" 2>/dev/null || echo "Cannot read file"
            done
            
            echo -e "\n=== Analysis Complete ==="
          } | tee analysis_output/repository-analysis.txt
          
          # List the analysis files
          echo -e "\nGenerated Analysis Files:"
          ls -l analysis_output/

      - name: Check and Document Current Files
        run: |
          {
            echo "=== Current File Status Check ==="
            echo "Timestamp: $(date -u)"
            
            echo -e "\n1. Checking sched_assist:"
            if [ -d "kernel/sched_assist" ]; then
              echo "kernel/sched_assist exists"
              ls -la kernel/sched_assist/
            else
              echo "kernel/sched_assist does not exist"
            fi
            
            echo -e "\n2. Checking klockopt:"
            if [ -d "kernel/locking/klockopt" ]; then
              echo "kernel/locking/klockopt exists"
              ls -la kernel/locking/klockopt/
            else
              echo "kernel/locking/klockopt does not exist"
            fi
            
            echo -e "\n3. Full paths of key directories:"
            find . -name "sched_assist" -type d -exec readlink -f {} \;
            find . -name "klockopt" -type d -exec readlink -f {} \;
            
            echo -e "\n4. Git Status:"
            git status
            
            echo -e "\n=== Status Check Complete ==="
          } | tee analysis_output/current-status.txt

      - name: Upload Analysis Results
        uses: actions/upload-artifact@v4
        with:
          name: repository-analysis
          path: analysis_output/
          if-no-files-found: error

      - name: Display Analysis Summary
        run: |
          echo "=== Analysis Summary ==="
          echo "Files generated:"
          ls -l analysis_output/
          
          echo -e "\nKey findings:"
          grep -h "exists\|directory\|File:" analysis_output/*.txt || echo "No key findings found"
